cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M2000_G3_nmh5_sdAdp",
G          = 3,
M          = 2000,
n_mh       = 5
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
skeleton  <- vinecop(U, family_set = "gaussian")
# ── dimensions ───────────────────────────────────────────────────
N <- nrow(U); K <- cfg$K; M <- cfg$M
# ── pre-allocate diagnostics ───────────────────────────────────────────────
out <- list(
log_pred   = numeric(N),
theta_mean = matrix(NA_real_, N, K),
theta_se   = matrix(NA_real_, N, K),
gamma_mean = matrix(NA_real_, N, K),
gamma_se   = matrix(NA_real_, N, K),
diag_log   = data.table::data.table(
t      = integer(N),
tr     = integer(N),
ESS    = numeric(N),
unique = integer(N),
euc    = numeric(N)
),
mh_acc_pct      = rep(NA_real_, N),
step_sd_hist      = rep(NA_real_, N),
theta_hist      = array(NA_real_,    dim = c(M, N, K)),
gamma_hist      = array(NA_integer_, dim = c(M, N, K)),
ancestorIndices = matrix(0L, M, N)
)
# ── initial state ──────────────────────────────────────────────────────────
particles <- replicate(M, new_particle(cfg), simplify = FALSE)
out$ancestorIndices[, 1] <- seq_len(M)
tr  <- 0L        #  “tree” counter — keep if you resample by tree else 0
pos <- 1L        #  row pointer for diag_log
# ── parallel backend ───────────────────────────────────────────────────────
cl <- parallel::makeCluster(n_cores)
on.exit(parallel::stopCluster(cl), add = TRUE)          # safe cleanup
parallel::clusterSetRNGStream(cl, cfg$seed)
parallel::clusterExport(
cl,
c("mh_step_in_tree", "vine_from_particle", "log_prior",
"bicop_dist", "vinecop_dist", "dvinecop", "skeleton", "cfg",
"mh_step", "propagate_particles", "update_weights", "ESS",
"diagnostic_report", "systematic_resample", "resample_move",
"compute_predictive_metrics", "compute_log_incr"),
envir = environment()
)
n_cores    = max(parallel::detectCores() - 1, 1)
# ── parallel backend ───────────────────────────────────────────────────────
cl <- parallel::makeCluster(n_cores)
on.exit(parallel::stopCluster(cl), add = TRUE)          # safe cleanup
parallel::clusterSetRNGStream(cl, cfg$seed)
parallel::clusterExport(
cl,
c("mh_step_in_tree", "vine_from_particle", "log_prior",
"bicop_dist", "vinecop_dist", "dvinecop", "skeleton", "cfg",
"mh_step", "propagate_particles", "update_weights", "ESS",
"diagnostic_report", "systematic_resample", "resample_move",
"compute_predictive_metrics", "compute_log_incr"),
envir = environment()
)
t_idx=1
u_row <- U[t_idx, , drop = FALSE]
# 1. propagate step ──────────────────────────────────────────────────────
particles <- propagate_particles(particles, cfg)
# 3. weight update ──────────────────────────────────────────────────────
log_incr  <- compute_log_incr(particles, u_row, skeleton, cfg)
particles <- update_weights(particles, log_incr)
w_new     <- vapply(particles, `[[`, numeric(1), "w")
# 4. diagnostics ────────────────────────────────────────────────────────
dg <- diagnostic_report(t_idx, tr, U, particles, w_new, cfg)
out$diag_log[pos, `:=`(
t      = t_idx,
tr     = tr,
ESS    = dg$ESS,
unique = dg$unique,
euc    = dg$euc
)]
pos <- pos + 1L
ESS(w_new)
cfg$ess_thr * M
data_up_to_t <- U[max(1, t_idx - cfg$W + 1):t_idx, , drop = FALSE]
newAnc <- stratified_resample(w_new)
move_out     <- resample_move(particles, newAnc, data_up_to_t,
cl, type, cfg, skeleton=skeleton)
type = "standard"
move_out     <- resample_move(particles, newAnc, data_up_to_t,
cl, type, cfg, skeleton=skeleton)
move_out$acc_pct
# ──────────────────────────────────────────────────────────────────────────────
#  experiment_runner.R  ── batch-run C-vine SMC (standard & block)  ── 2025-06-18
# ──────────────────────────────────────────────────────────────────────────────
library(here)
source(here::here("src","config.R"))
dir.create(here::here("simul_results/static_dgp"), showWarnings = FALSE)
run_and_save <- function(U, cfg, alg = c("standard", "block"), tag = NULL) {
alg <- match.arg(alg)
res <- switch(
alg,
standard = run_standard_smc(U, cfg, type = "standard"),
block    = run_block_smc(U, cfg, type = "block")
)
res$cfg <- cfg
tag   <- if (is.null(tag)) "" else paste0("_", tag)
fname <- here::here("simul_results/static_dgp", paste0(alg, "_", ncol(U) , tag))
saveRDS(res, fname)
message(sprintf("✓ Saved %s", fname))
cat("\n\n===== FINAL MODEL EVALUATION =====\n")
cat(sprintf("Log Model Evidence: %.4f\n", res$log_model_evidence))
rm(res); invisible(gc())
}
set.seed(126)
U  <- sim_static_cop_8(N = 8)
d  <- ncol(U)
cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M2000_G3_nmh5_sdAdp",
G          = 3,
M          = 2000,
n_mh       = 5
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
for (i in seq_along(cfg_variants)) {
v    <- cfg_variants[[i]]          # pull the i-th inner list
tag  <- v[["label"]]               # safe even if names = NULL
tweaks <- v[ setdiff(names(v), "label") ]   # drop label for merging
cfg    <- modifyList(build_cfg(d), tweaks)
cfg$label <- tag
for (alg in c("standard")) {
set.seed(cfg$seed)
run_and_save(U, cfg, alg, tag)
}
}
# ──────────────────────────────────────────────────────────────────────────────
#  experiment_runner.R  ── batch-run C-vine SMC (standard & block)  ── 2025-06-18
# ──────────────────────────────────────────────────────────────────────────────
library(here)
source(here::here("src","config.R"))
dir.create(here::here("simul_results/static_dgp"), showWarnings = FALSE)
run_and_save <- function(U, cfg, alg = c("standard", "block"), tag = NULL) {
alg <- match.arg(alg)
res <- switch(
alg,
standard = run_standard_smc(U, cfg, type = "standard"),
block    = run_block_smc(U, cfg, type = "block")
)
res$cfg <- cfg
tag   <- if (is.null(tag)) "" else paste0("_", tag)
fname <- here::here("simul_results/static_dgp", paste0(alg, "_", ncol(U) , tag))
saveRDS(res, fname)
message(sprintf("✓ Saved %s", fname))
cat("\n\n===== FINAL MODEL EVALUATION =====\n")
cat(sprintf("Log Model Evidence: %.4f\n", res$log_model_evidence))
rm(res); invisible(gc())
}
set.seed(126)
U  <- sim_static_cop_8(N = 15)
d  <- ncol(U)
cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M1000_G3_nmh1_sdAdp",
G          = 3,
M          = 1000,
n_mh       = 1
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
for (i in seq_along(cfg_variants)) {
v    <- cfg_variants[[i]]          # pull the i-th inner list
tag  <- v[["label"]]               # safe even if names = NULL
tweaks <- v[ setdiff(names(v), "label") ]   # drop label for merging
cfg    <- modifyList(build_cfg(d), tweaks)
cfg$label <- tag
for (alg in c("standard")) {
set.seed(cfg$seed)
run_and_save(U, cfg, alg, tag)
}
}
res <- readRDS("simul_results/static_dgp/standard_8_pi07_M2000_G3_nmh5_sdAdp")
res <- readRDS("simul_results/static_dgp/standard_8_pi07_M1000_G3_nmh1_sdAdp")
res$step_sd_hist
# ──────────────────────────────────────────────────────────────────────────────
#  experiment_runner.R  ── batch-run C-vine SMC (standard & block)  ── 2025-06-18
# ──────────────────────────────────────────────────────────────────────────────
library(here)
source(here::here("src","config.R"))
dir.create(here::here("simul_results/static_dgp"), showWarnings = FALSE)
run_and_save <- function(U, cfg, alg = c("standard", "block"), tag = NULL) {
alg <- match.arg(alg)
res <- switch(
alg,
standard = run_standard_smc(U, cfg, type = "standard"),
block    = run_block_smc(U, cfg, type = "block")
)
res$cfg <- cfg
tag   <- if (is.null(tag)) "" else paste0("_", tag)
fname <- here::here("simul_results/static_dgp", paste0(alg, "_", ncol(U) , tag))
saveRDS(res, fname)
message(sprintf("✓ Saved %s", fname))
cat("\n\n===== FINAL MODEL EVALUATION =====\n")
cat(sprintf("Log Model Evidence: %.4f\n", res$log_model_evidence))
rm(res); invisible(gc())
}
set.seed(126)
U  <- sim_static_cop_8(N = 20)
d  <- ncol(U)
cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M1000_G3_nmh1_sdAdp",
G          = 3,
M          = 1000,
n_mh       = 1
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
for (i in seq_along(cfg_variants)) {
v    <- cfg_variants[[i]]          # pull the i-th inner list
tag  <- v[["label"]]               # safe even if names = NULL
tweaks <- v[ setdiff(names(v), "label") ]   # drop label for merging
cfg    <- modifyList(build_cfg(d), tweaks)
cfg$label <- tag
for (alg in c("standard")) {
set.seed(cfg$seed)
run_and_save(U, cfg, alg, tag)
}
}
res <- readRDS("simul_results/static_dgp/standard_8_pi07_M1000_G3_nmh1_sdAdp")
res$step_sd_hist
# ──────────────────────────────────────────────────────────────────────────────
#  experiment_runner.R  ── batch-run C-vine SMC (standard & block)  ── 2025-06-18
# ──────────────────────────────────────────────────────────────────────────────
library(here)
source(here::here("src","config.R"))
dir.create(here::here("simul_results/static_dgp"), showWarnings = FALSE)
run_and_save <- function(U, cfg, alg = c("standard", "block"), tag = NULL) {
alg <- match.arg(alg)
res <- switch(
alg,
standard = run_standard_smc(U, cfg, type = "standard"),
block    = run_block_smc(U, cfg, type = "block")
)
res$cfg <- cfg
tag   <- if (is.null(tag)) "" else paste0("_", tag)
fname <- here::here("simul_results/static_dgp", paste0(alg, "_", ncol(U) , tag))
saveRDS(res, fname)
message(sprintf("✓ Saved %s", fname))
cat("\n\n===== FINAL MODEL EVALUATION =====\n")
cat(sprintf("Log Model Evidence: %.4f\n", res$log_model_evidence))
rm(res); invisible(gc())
}
set.seed(126)
U  <- sim_static_cop_8(N = 30)
d  <- ncol(U)
cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M1000_G3_nmh1_sdAdp",
G          = 3,
M          = 1000,
n_mh       = 1
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
for (i in seq_along(cfg_variants)) {
v    <- cfg_variants[[i]]          # pull the i-th inner list
tag  <- v[["label"]]               # safe even if names = NULL
tweaks <- v[ setdiff(names(v), "label") ]   # drop label for merging
cfg    <- modifyList(build_cfg(d), tweaks)
cfg$label <- tag
for (alg in c("standard")) {
set.seed(cfg$seed)
run_and_save(U, cfg, alg, tag)
}
}
res <- readRDS("simul_results/static_dgp/standard_8_pi07_M1000_G3_nmh1_sdAdp")
res$step_sd_hist
# ──────────────────────────────────────────────────────────────────────────────
#  experiment_runner.R  ── batch-run C-vine SMC (standard & block)  ── 2025-06-18
# ──────────────────────────────────────────────────────────────────────────────
library(here)
source(here::here("src","config.R"))
dir.create(here::here("simul_results/static_dgp"), showWarnings = FALSE)
run_and_save <- function(U, cfg, alg = c("standard", "block"), tag = NULL) {
alg <- match.arg(alg)
res <- switch(
alg,
standard = run_standard_smc(U, cfg, type = "standard"),
block    = run_block_smc(U, cfg, type = "block")
)
res$cfg <- cfg
tag   <- if (is.null(tag)) "" else paste0("_", tag)
fname <- here::here("simul_results/static_dgp", paste0(alg, "_", ncol(U) , tag))
saveRDS(res, fname)
message(sprintf("✓ Saved %s", fname))
cat("\n\n===== FINAL MODEL EVALUATION =====\n")
cat(sprintf("Log Model Evidence: %.4f\n", res$log_model_evidence))
rm(res); invisible(gc())
}
set.seed(126)
U  <- sim_static_cop_8(N = 30)
d  <- ncol(U)
cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M1000_G3_nmh1_sdAdp",
G          = 3,
M          = 1000,
n_mh       = 1
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
for (i in seq_along(cfg_variants)) {
v    <- cfg_variants[[i]]          # pull the i-th inner list
tag  <- v[["label"]]               # safe even if names = NULL
tweaks <- v[ setdiff(names(v), "label") ]   # drop label for merging
cfg    <- modifyList(build_cfg(d), tweaks)
cfg$label <- tag
for (alg in c("standard")) {
set.seed(cfg$seed)
run_and_save(U, cfg, alg, tag)
}
}
# ──────────────────────────────────────────────────────────────────────────────
#  experiment_runner.R  ── batch-run C-vine SMC (standard & block)  ── 2025-06-18
# ──────────────────────────────────────────────────────────────────────────────
library(here)
source(here::here("src","config.R"))
dir.create(here::here("simul_results/static_dgp"), showWarnings = FALSE)
run_and_save <- function(U, cfg, alg = c("standard", "block"), tag = NULL) {
alg <- match.arg(alg)
res <- switch(
alg,
standard = run_standard_smc(U, cfg, type = "standard"),
block    = run_block_smc(U, cfg, type = "block")
)
res$cfg <- cfg
tag   <- if (is.null(tag)) "" else paste0("_", tag)
fname <- here::here("simul_results/static_dgp", paste0(alg, "_", ncol(U) , tag))
saveRDS(res, fname)
message(sprintf("✓ Saved %s", fname))
cat("\n\n===== FINAL MODEL EVALUATION =====\n")
cat(sprintf("Log Model Evidence: %.4f\n", res$log_model_evidence))
rm(res); invisible(gc())
}
set.seed(126)
U  <- sim_static_cop_8(N = 30)
d  <- ncol(U)
cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M1000_G3_nmh1",
G          = 3,
M          = 1000,
n_mh       = 1
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
for (i in seq_along(cfg_variants)) {
v    <- cfg_variants[[i]]          # pull the i-th inner list
tag  <- v[["label"]]               # safe even if names = NULL
tweaks <- v[ setdiff(names(v), "label") ]   # drop label for merging
cfg    <- modifyList(build_cfg(d), tweaks)
cfg$label <- tag
for (alg in c("standard")) {
set.seed(cfg$seed)
run_and_save(U, cfg, alg, tag)
}
}
# ──────────────────────────────────────────────────────────────────────────────
#  experiment_runner.R  ── batch-run C-vine SMC (standard & block)  ── 2025-06-18
# ──────────────────────────────────────────────────────────────────────────────
library(here)
source(here::here("src","config.R"))
dir.create(here::here("simul_results/static_dgp"), showWarnings = FALSE)
run_and_save <- function(U, cfg, alg = c("standard", "block"), tag = NULL) {
alg <- match.arg(alg)
res <- switch(
alg,
standard = run_standard_smc(U, cfg, type = "standard"),
block    = run_block_smc(U, cfg, type = "block")
)
res$cfg <- cfg
tag   <- if (is.null(tag)) "" else paste0("_", tag)
fname <- here::here("simul_results/static_dgp", paste0(alg, "_", ncol(U) , tag))
saveRDS(res, fname)
message(sprintf("✓ Saved %s", fname))
cat("\n\n===== FINAL MODEL EVALUATION =====\n")
cat(sprintf("Log Model Evidence: %.4f\n", res$log_model_evidence))
rm(res); invisible(gc())
}
set.seed(126)
U  <- sim_static_cop_8(N = 80)
d  <- ncol(U)
cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M1000_G3_nmh1_sdAdap",
G          = 3,
M          = 1000,
n_mh       = 1
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
for (i in seq_along(cfg_variants)) {
v    <- cfg_variants[[i]]          # pull the i-th inner list
tag  <- v[["label"]]               # safe even if names = NULL
tweaks <- v[ setdiff(names(v), "label") ]   # drop label for merging
cfg    <- modifyList(build_cfg(d), tweaks)
cfg$label <- tag
for (alg in c("standard")) {
set.seed(cfg$seed)
run_and_save(U, cfg, alg, tag)
}
}
# ──────────────────────────────────────────────────────────────────────────────
#  experiment_runner.R  ── batch-run C-vine SMC (standard & block)  ── 2025-06-18
# ──────────────────────────────────────────────────────────────────────────────
library(here)
source(here::here("src","config.R"))
dir.create(here::here("simul_results/static_dgp"), showWarnings = FALSE)
run_and_save <- function(U, cfg, alg = c("standard", "block"), tag = NULL) {
alg <- match.arg(alg)
res <- switch(
alg,
standard = run_standard_smc(U, cfg, type = "standard"),
block    = run_block_smc(U, cfg, type = "block")
)
res$cfg <- cfg
tag   <- if (is.null(tag)) "" else paste0("_", tag)
fname <- here::here("simul_results/static_dgp", paste0(alg, "_", ncol(U) , tag))
saveRDS(res, fname)
message(sprintf("✓ Saved %s", fname))
cat("\n\n===== FINAL MODEL EVALUATION =====\n")
cat(sprintf("Log Model Evidence: %.4f\n", res$log_model_evidence))
rm(res); invisible(gc())
}
set.seed(126)
U  <- sim_static_cop_8(N = 80)
d  <- ncol(U)
cfg_variants <- list(
list(
pi0_edge   = 0.70,
label      = "pi07_M1000_G3_nmh1",
G          = 3,
M          = 1000,
n_mh       = 1
) #,
# list(
#   pi0_edge   = 0.70,
#   W          = 30,
#   label      = "pi07_W30"
# )
)
for (i in seq_along(cfg_variants)) {
v    <- cfg_variants[[i]]          # pull the i-th inner list
tag  <- v[["label"]]               # safe even if names = NULL
tweaks <- v[ setdiff(names(v), "label") ]   # drop label for merging
cfg    <- modifyList(build_cfg(d), tweaks)
cfg$label <- tag
for (alg in c("standard")) {
set.seed(cfg$seed)
run_and_save(U, cfg, alg, tag)
}
}
res <- readRDS("simul_results/static_dgp/standard_8_pi07_M1000_G3_nmh1_sdAdap")
res$log_model_evidence
res$step_sd_hist
res$diag_log$unique
ress <- readRDS("simul_results/static_dgp/standard_8_pi07_M1000_G3_nmh1")
ress$step_sd_hist
ress$diag_log$unique
git reset --hard
